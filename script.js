const generateButton = document.getElementById("generate-button");
const nameDisplay = document.getElementById("name-display");
const categoryPicker = document.getElementById("kategoria");
const numberPicker = document.getElementById("liczba");

categoryPicker.addEventListener("change", (e) => {
  category = categoryPicker.value;
});

numberPicker.addEventListener("change", (e) => {
  numberGenerated = numberPicker.value;
});

let numberGenerated = 1;
let category = "MBNames";

const MBNames = {
  type: "mixer",
  prefix: [
    "Al",
    "Adal",
    "The",
    "Tor",
    "Tö",
    "Ur",
    "Dru",
    "Vik",
    "Va",
    "Vo",
    "Vra",
    "Vre",
    "We",
    "Ske",
    "Bur",
    "Burd",
    "Jau",
    "Ja",
    "Thro",
    "Tar",
    "Yv",
    "Gre",
    "Li",
    "Ga",
    "Or",
    "Mor",
    "Fe",
    "Wak",
    "Sun",
    "Gra",
    "Kran",
    "Kra",
    "Gne",
    "Kluv",
    "Qift-",
    "Mar",
    "Klo",
    "Dö",
    "Aerg-",
    "Ag",
    "Schlef",
    "Schle",
    "Bel",
    "Dom",
    "Vük",
    "Vü",
    "Bör",
    "Dae",
    "Kath",
    "Fel",
    "Got",
    "Sen",
    "Gri",
    "Haer",
    "Har",
    "Jot",
    "Kar",
    "Kat",
    "Kef",
    "Ku",
    "Kve",
    "Ly",
    "Mer",
    "Nag",
    "Ni",
    "Nif",
    "Prü",
    "Qill",
    "Ri",
    "Svi",
    "Illalukt",
    "Näs",
    "Kjell",
    "Mod",
    "Mund",
    "Eggar",
    "Ulf",
    "Som",
    "Göd",
    "Ärn",
    "Ödh",
    "Ærn",
    "Ylia",
    "Odhen",
    "Pe",
    "Orm",
    "Folk",
    "Gerul",
    "Det",
    "Le",
    "Ra",
    "An",
    "Les",
    "Josil",
    "Sig",
    "Sagso",
    "Hon",
    "Bon",
  ],
  suffix: [
    "ras",
    "fa",
    "rg",
    "vul",
    "rn",
    "m",
    "gel",
    "gal",
    "tan",
    "n",
    "kh",
    "si",
    "tor",
    "mut",
    "lh",
    "der",
    "er",
    "rk",
    "urk",
    "vl",
    "tuk",
    "kin",
    "til",
    "lt",
    "en",
    "gar",
    "gan",
    "ta",
    "ust",
    "vuld",
    "ngel",
    "gul",
    "th",
    "rist",
    "mol",
    "dul",
    "van",
    "lun",
    "tval",
    "zum",
    "sum",
    "kan",
    "buth",
    "kkan",
    "da",
    "ru",
    "an",
    "ban",
    "vel",
    "kil",
    "ttr",
    "rü",
    "gha",
    "mug",
    "na",
    "g",
    "la",
    "tar",
    "rt",
    "tz",
    "tin",
    "kari",
    "l",
    "duk",
    "uk",
    "ehl",
    "nach",
    "sten",
    "nd",
    "ande",
    "sig",
    "biorn",
    "u",
    "her",
    "gärdh",
    "dus",
    "ger",
    "mar",
    "ika",
    "gun",
    "dis",
    "karl",
    "lög",
    "biörn",
    "phus",
    "don",
    "dona",
    "on",
    "chela",
    "dy",
    "bert",
    "berta",
    "fúm",
    "ker",
  ],
};

const MBTowns = {
  type: "mixer",
  prefix: [
    "Alli",
    "Galgen",
    "Schles",
    "Ker",
    "On",
    "Gro",
    "Tor",
    "Skar",
    "Stur",
    "Draken",
    "Ebel",
    "Kal",
    "Breid",
    "Laug",
    "Ravn",
    "Esse",
    "Ful",
    "Hul",
    "Sten",
    "Kale",
    "Kirke",
    "Kirk",
    "Kli",
    "Langa",
    "Lund",
    "Akra",
    "Sand",
    "Alb",
    "Al.",
    "Alt",
    "Amor",
    "Creuz",
    "Arn",
    "Aren",
    "Arz",
    "Auer",
    "Wind",
    "Bel",
    "Ber",
    "Dürre",
    "Dürk",
    "Brücke",
    "Freien",
    "Staffel",
    "Borgen",
    "Baier",
    "Hers",
    "Bremer",
    "Breu",
    "Bra",
    "Bor",
    "Bott",
    "Born",
    "Braun",
    "Blanken",
    "Falken",
    "Clin",
    "Da",
    "Die",
    "Dür",
    "Dül",
    "Düssel",
    "Ehren",
    "Eckart",
    "Eber",
    "Enger",
    "Enne",
    "Eppel",
    "Eus",
    "Esch",
    "Filder",
    "Franken",
    "Frönden",
    "Fürsten",
    "Füs",
    "Füssen",
    "Furt",
    "Frank",
    "Gammer",
    "Gail",
    "Geisel",
    "Gel",
    "Geld",
    "Glau",
    "Gerolz",
    "Grün",
    "Güglin",
    "Glad",
    "Greven",
    "Grö",
    "Hagen",
    "Hada",
    "Halden",
    "Haldens",
    "Held",
    "Helm",
    "Hirsch",
    "Hochen",
    "Havel",
    "Heidel",
    "Hun",
    "Ingol",
    "Kalten",
    "Karben",
    "Karl",
    "Kir",
    "Kraut",
    "Krani",
    "Kon",
    "Kupfer",
    "König",
    "Kempt",
    "Kempt",
    "Kelster",
    "Kelk",
    "Kuppen",
    "Langa",
    "Leuten",
    "Lü",
    "Litchen",
    "Lauen",
    "Lange",
    "Lauf",
    "Linden",
    "Lüt",
    "Mans",
    "Mitten",
    "Min",
    "Markt",
    "Mühlen",
    "Mon",
    "Münche",
    "Mun",
    "Neuen",
    "Neu",
    "Nieder",
    "Nieden",
    "Nort",
    "Nitten",
    "Nier",
    "Nien",
    "Nord",
    "Ober",
    "Oberz",
    "Oster",
    "Osten",
    "Oppen",
    "Olden",
    "Orn",
    "Orten",
    "Oder",
    "Pfung",
    "Rabe",
    "Rade",
    "Rends",
    "Rasten",
    "Rie",
    "Roten",
    "Rein",
    "Schau",
    "Stadt",
    "Schram",
    "Schrap",
    "Stein",
    "Teu",
    "Tete",
    "Taun",
    "Tan",
    "Traun",
    "Uffen",
    "Un",
    "Ummer",
    "Vel",
    "Vils",
    "Vissel",
    "Voh",
    "Vre",
    "Volk",
    "Volks",
    "Volker",
    "Wald",
    "Witten",
    "Wissen",
    "Winter",
    "Wermel",
    "Wern",
    "Witt",
    "Wein",
    "Wermel",
    "Wals",
    "Wolfem",
    "Wol",
    "Wolken",
    "Wurz",
    "Wasser",
    "Ziegen",
    "Zeren",
    "Zirn",
    "Zitt",
    "Zwingen",
    "Zwei",
    "Zei",
  ],
  suffix: [
    "ans",
    "beck",
    "wig",
    "güs",
    "da",
    "vi",
    "por",
    "de",
    "la",
    "toft",
    "brek",
    "dal",
    "by",
    "gard",
    "garde",
    "hus",
    "kot",
    "bo",
    "nes",
    "vik",
    "sun",
    "torp",
    "berg",
    "heim",
    "dorf",
    "haus",
    "stadt",
    "stedt",
    "feld",
    "leben",
    "steig",
    "kirchen",
    "bach",
    "burg",
    "helm",
    "zig",
    "ka",
    "nau",
    "walde",
    "stein",
    "haven",
    "vörde",
    "kel",
    "kum",
    "rom",
    "schweig",
    "schau",
    "gen",
    "un",
    "shagen",
    "men",
    "en",
    "thal",
    "sen ",
    "wangen",
    "furt",
    "men",
    "münden",
    "chau",
    "broich",
    "mühlen",
    "ditz",
    "enau",
    "mar",
    "stel",
    "stanz",
    "ten",
    "dau",
    "zen",
    "den",
    "schau",
    "ster",
    "sulm",
    "rade",
    "mark",
    "kloster",
    "horn",
    "lau",
    "den",
    "borg",
  ],
};

const MBWeather = {
  type: "picker",
  list: ["rain", "fog"],
};

function removeAllChildren(element) {
  let counter = element.children.length;
  for (let m = 0; m <= counter; m++) {
    if (element.children[0]) {
      element.children[0].remove();
    }
  }
}

function randomizeFromArray(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function displayArray(ar, parent) {
  for (j = 0; j < ar.length; j++) {
    let line = document.createElement("p");
    line.innerText = ar[j];
    parent.appendChild(line);
  }
}

generateButton.addEventListener("click", () => {
  let result = [];
  console.log(category);
  console.log(eval(category));
  let pickedCategory = eval(category);
  removeAllChildren(nameDisplay);
  for (let i = 0; i < numberGenerated; i++) {
    if (pickedCategory.type === "mixer")
      result.push(
        randomizeFromArray(pickedCategory.prefix) +
          randomizeFromArray(pickedCategory.suffix)
      );
    else if (pickedCategory.type === "picker") {
      result.push(randomizeFromArray(pickedCategory.list));
    }
  }
  displayArray(result, nameDisplay);
});
